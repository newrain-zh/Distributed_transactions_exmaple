<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.AccountFreezeRecordMapper">
    <!-- 结果集映射 -->
    <resultMap id="BaseResultMap" type="com.example.entity.AccountFreezeRecord">
        <id column="xid" property="xid" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="balance" property="balance" jdbcType="INTEGER"/>
        <result column="freeze_amount" property="freezeAmount" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基础字段列表 -->
    <sql id="Base_Column_List">
        xid, user_id, balance, freeze_amount, state
    </sql>

    <!-- 根据主键删除 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from account_freeze_record
        where xid = #{xid,jdbcType=INTEGER}
    </delete>

    <!-- 插入完整记录 -->
    <insert id="insert" parameterType="com.example.entity.AccountFreezeRecord">
        insert into account_freeze_record (xid, user_id, balance,
                                           freeze_amount, state)
        values (#{xid,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{balance,jdbcType=INTEGER},
                #{freezeAmount,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
    </insert>

    <!-- 插入非空字段记录 -->
    <insert id="insertSelective" parameterType="com.example.entity.AccountFreezeRecord">
        insert into account_freeze_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="xid != null">xid,</if>
            <if test="userId != null">user_id,</if>
            <if test="balance != null">balance,</if>
            <if test="freezeAmount != null">freeze_amount,</if>
            <if test="state != null">state,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="xid != null">#{xid,jdbcType=VARCHAR},</if>
            <if test="userId != null">#{userId,jdbcType=VARCHAR},</if>
            <if test="balance != null">#{balance,jdbcType=INTEGER},</if>
            <if test="freezeAmount != null">#{freezeAmount,jdbcType=INTEGER},</if>
            <if test="state != null">#{state,jdbcType=INTEGER},</if>
        </trim>
    </insert>

    <!-- 根据主键查询 -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from account_freeze_record
        where xid = #{xid,jdbcType=VARCHAR}
    </select>

    <!-- 根据用户ID查询 -->
    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from account_freeze_record
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <!-- 根据状态查询 -->
    <select id="selectByState" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from account_freeze_record
        where state = #{state,jdbcType=INTEGER}
    </select>

    <!-- 根据主键更新非空字段 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.AccountFreezeRecord">
        update account_freeze_record
        <set>
            <if test="userId != null">user_id = #{userId,jdbcType=VARCHAR},</if>
            <if test="balance != null">balance = #{balance,jdbcType=INTEGER},</if>
            <if test="freezeAmount != null">freeze_amount = #{freezeAmount,jdbcType=INTEGER},</if>
            <if test="state != null">state = #{state,jdbcType=INTEGER},</if>
        </set>
        where xid = #{xid,jdbcType=VARCHAR}
    </update>

    <!-- 根据主键更新所有字段 -->
    <update id="updateByPrimaryKey" parameterType="com.example.entity.AccountFreezeRecord">
        update account_freeze_record
        set user_id = #{userId,jdbcType=VARCHAR},
            balance = #{balance,jdbcType=INTEGER},
            freeze_amount = #{freezeAmount,jdbcType=INTEGER},
            state = #{state,jdbcType=INTEGER}
        where xid = #{xid,jdbcType=VARCHAR}
    </update>
</mapper>