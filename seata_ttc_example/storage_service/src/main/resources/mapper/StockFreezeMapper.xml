<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.StockFreezeMapper">
    <!-- 结果集映射：数据库字段与实体类属性的映射关系 -->
    <resultMap id="BaseResultMap" type="com.example.entity.StockFreeze">
        <id column="xid" property="xid" jdbcType="VARCHAR"/>
        <result column="commodity_code" property="commodityCode" jdbcType="VARCHAR"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
        <result column="freeze_count" property="freezeCount" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基础字段列表SQL片段，用于复用 -->
    <sql id="Base_Column_List">
        xid, commodity_code, count, freeze_count, state
    </sql>

    <!-- 根据主键删除记录 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from stock_freeze
        where xid = #{xid,jdbcType=VARCHAR}
    </delete>

    <!-- 插入完整记录 -->
    <insert id="insert" parameterType="com.example.entity.StockFreeze">
        insert into stock_freeze (xid, commodity_code, count,
                                  freeze_count, state)
        values (#{xid,jdbcType=VARCHAR}, #{commodityCode,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER},
                #{freezeCount,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
    </insert>

    <!-- 插入非空字段记录 -->
    <insert id="insertSelective" parameterType="com.example.entity.StockFreeze">
        insert into stock_freeze
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="xid != null">xid,</if>
            <if test="commodityCode != null">commodity_code,</if>
            <if test="count != null">count,</if>
            <if test="freezeCount != null">freeze_count,</if>
            <if test="state != null">state,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="xid != null">#{xid,jdbcType=VARCHAR},</if>
            <if test="commodityCode != null">#{commodityCode,jdbcType=VARCHAR},</if>
            <if test="count != null">#{count,jdbcType=INTEGER},</if>
            <if test="freezeCount != null">#{freezeCount,jdbcType=INTEGER},</if>
            <if test="state != null">#{state,jdbcType=INTEGER},</if>
        </trim>
    </insert>

    <!-- 根据主键查询记录 -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from stock_freeze
        where xid = #{xid,jdbcType=VARCHAR}
    </select>

    <!-- 根据商品编码查询记录 -->
    <select id="selectByCommodityCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from stock_freeze
        where commodity_code = #{commodityCode,jdbcType=VARCHAR}
    </select>

    <!-- 根据状态查询记录 -->
    <select id="selectByState" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from stock_freeze
        where state = #{state,jdbcType=INTEGER}
    </select>

    <!-- 根据商品编码和状态查询记录 -->
    <select id="selectByCommodityCodeAndState" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_freeze
        where commodity_code = #{commodityCode,jdbcType=VARCHAR}
        and state = #{state,jdbcType=INTEGER}
    </select>

    <!-- 根据主键更新非空字段 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.StockFreeze">
        update stock_freeze
        <set>
            <if test="commodityCode != null">commodity_code = #{commodityCode,jdbcType=VARCHAR},</if>
            <if test="count != null">count = #{count,jdbcType=INTEGER},</if>
            <if test="freezeCount != null">freeze_count = #{freezeCount,jdbcType=INTEGER},</if>
            <if test="state != null">state = #{state,jdbcType=INTEGER},</if>
        </set>
        where xid = #{xid,jdbcType=VARCHAR}
    </update>

    <!-- 根据主键更新所有字段 -->
    <update id="updateByPrimaryKey" parameterType="com.example.entity.StockFreeze">
        update stock_freeze
        set commodity_code = #{commodityCode,jdbcType=VARCHAR},
            count = #{count,jdbcType=INTEGER},
            freeze_count = #{freezeCount,jdbcType=INTEGER},
            state = #{state,jdbcType=INTEGER}
        where xid = #{xid,jdbcType=VARCHAR}
    </update>
</mapper>